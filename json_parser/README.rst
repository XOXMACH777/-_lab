О задании
=========

Предоставление парсера формата JSON.

JSON - это рекурсивный формат для хранения текстовых данных.
Типы данных json включают в себя:

* примитивные типы: булевы, числа, строки, нулевой тип ``null``;
* массивы, которые могут содержать произвольные типы;
* ассоциативные пары ключ-значение, где ключ всегда представим типом строка.

Каждая часть парсера имеет своё пространство имён.
Это альтернативный подход к классам и методам и является обычной практикой для ``boost::spirit::x3``.

Требования
==========

Реализуйте сначала:

* ``quoted_string`` предоставляет правило для  работы со строками в кавычках;
* ``variant_decorator`` предоставляет рекурсивный ``variant`` со встроенным ``as`` методом;
* ``load_from_string`` - это вспомогательная функция, которая используется для конструирования объектов из парсера.

Опишите типы.
Они должны быть простыми, std-контейнеров будет достаточно.

Опишите правила парсинга.
Необходимо использовать типы, которые были описаны на предыдущем шаге.

Определите правила.
Рекурсивные правила могут быть объявлены раздельно.

Обязательно прохождение всех тестов.
